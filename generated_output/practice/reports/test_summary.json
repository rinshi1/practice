{
  "agent_name": "practice",
  "timestamp": "2025-08-06T14:03:07.882373",
  "overall_status": false,
  "metrics": {
    "test_coverage": 80.0,
    "quality_score": 6,
    "tests_total": 20,
    "tests_passed": 4,
    "tests_failed": 16,
    "functions_count": 2,
    "classes_count": 1,
    "total_issues": 94,
    "total_statements": 160,
    "covered_statements": 128,
    "missing_statements": 32
  },
  "thresholds": {
    "coverage_threshold": 80,
    "quality_threshold": 70,
    "meets_coverage": true,
    "meets_quality": false
  },
  "coverage_details": {
    "file_coverage": {
      "practice\\agent.py": {
        "statements": 36,
        "missing": 0,
        "covered": 36,
        "coverage_percent": 100.0,
        "missing_lines": [],
        "excluded_lines": []
      },
      "practice\\output\\tests\\test_integration_agent.py": {
        "statements": 66,
        "missing": 10,
        "covered": 56,
        "coverage_percent": 84.84848484848484,
        "missing_lines": [
          53,
          65,
          68,
          69,
          96,
          99,
          100,
          101,
          102,
          104
        ],
        "excluded_lines": []
      },
      "practice\\output\\tests\\test_unit_agent.py": {
        "statements": 58,
        "missing": 22,
        "covered": 36,
        "coverage_percent": 62.06896551724138,
        "missing_lines": [
          35,
          47,
          48,
          49,
          50,
          56,
          57,
          58,
          65,
          66,
          67,
          76,
          77,
          78,
          84,
          85,
          86,
          87,
          88,
          99,
          100,
          101
        ],
        "excluded_lines": []
      }
    },
    "meta": {
      "format": 3,
      "version": "7.9.1",
      "timestamp": "2025-08-06T14:02:19.626972",
      "branch_coverage": false,
      "show_contexts": false
    }
  },
  "recommendations": [
    "Add tests for 32 uncovered statements",
    "Fix type errors and critical issues",
    "Consider addressing style and convention warnings",
    "Code quality is below acceptable threshold (70)",
    "Improve code quality to meet minimum standards"
  ],
  "detailed_results": {
    "test_results": {
      "total": 20,
      "passed": 4,
      "failed": 16,
      "skipped": 0,
      "duration": 50.77120351791382,
      "exit_code": 1,
      "details": {
        "created": 1754469139.706144,
        "duration": 50.77120351791382,
        "exitcode": 1,
        "root": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent",
        "environment": {},
        "summary": {
          "passed": 4,
          "failed": 16,
          "total": 20,
          "collected": 20
        },
        "collectors": [
          {
            "nodeid": "",
            "outcome": "passed",
            "result": [
              {
                "nodeid": "practice/output/tests",
                "type": "Dir"
              }
            ]
          },
          {
            "nodeid": "practice/output/tests/test_integration_agent.py",
            "outcome": "passed",
            "result": [
              {
                "nodeid": "practice/output/tests/test_integration_agent.py::test_llm_initialization",
                "type": "Function",
                "lineno": 27
              },
              {
                "nodeid": "practice/output/tests/test_integration_agent.py::test_full_workflow",
                "type": "Function",
                "lineno": 38
              },
              {
                "nodeid": "practice/output/tests/test_integration_agent.py::test_state_graph_transitions",
                "type": "Function",
                "lineno": 45
              },
              {
                "nodeid": "practice/output/tests/test_integration_agent.py::test_validation_error_handling",
                "type": "Function",
                "lineno": 55
              },
              {
                "nodeid": "practice/output/tests/test_integration_agent.py::test_async_operation",
                "type": "Coroutine",
                "lineno": 60
              },
              {
                "nodeid": "practice/output/tests/test_integration_agent.py::test_env_config",
                "type": "Function",
                "lineno": 71
              },
              {
                "nodeid": "practice/output/tests/test_integration_agent.py::test_state_persistence_and_update",
                "type": "Function",
                "lineno": 75
              },
              {
                "nodeid": "practice/output/tests/test_integration_agent.py::test_varied_user_inputs[Check my booking status.]",
                "type": "Function",
                "lineno": 82
              },
              {
                "nodeid": "practice/output/tests/test_integration_agent.py::test_varied_user_inputs[Cancel my flight.]",
                "type": "Function",
                "lineno": 82
              },
              {
                "nodeid": "practice/output/tests/test_integration_agent.py::test_varied_user_inputs[Help with flight options.]",
                "type": "Function",
                "lineno": 82
              },
              {
                "nodeid": "practice/output/tests/test_integration_agent.py::test_timeout_conditions",
                "type": "Function",
                "lineno": 93
              }
            ]
          },
          {
            "nodeid": "practice/output/tests/test_unit_agent.py",
            "outcome": "passed",
            "result": [
              {
                "nodeid": "practice/output/tests/test_unit_agent.py::test_state_initialization_happy_path",
                "type": "Function",
                "lineno": 29
              },
              {
                "nodeid": "practice/output/tests/test_unit_agent.py::test_state_initialization_invalid_input",
                "type": "Function",
                "lineno": 37
              },
              {
                "nodeid": "practice/output/tests/test_unit_agent.py::test_chatbot_function_happy_path",
                "type": "Function",
                "lineno": 43
              },
              {
                "nodeid": "practice/output/tests/test_unit_agent.py::test_chatbot_function_edge_case_empty_message",
                "type": "Function",
                "lineno": 52
              },
              {
                "nodeid": "practice/output/tests/test_unit_agent.py::test_chatbot_function_edge_case_long_message",
                "type": "Function",
                "lineno": 60
              },
              {
                "nodeid": "practice/output/tests/test_unit_agent.py::test_chatbot_function_with_memory",
                "type": "Function",
                "lineno": 69
              },
              {
                "nodeid": "practice/output/tests/test_unit_agent.py::test_chatbot_function_error_handling",
                "type": "Function",
                "lineno": 80
              },
              {
                "nodeid": "practice/output/tests/test_unit_agent.py::test_chat_parameterized[Find flights to Berlin-Flights found to Berlin]",
                "type": "Function",
                "lineno": 91
              },
              {
                "nodeid": "practice/output/tests/test_unit_agent.py::test_chat_parameterized[Check my flight status-Your flight status is on time]",
                "type": "Function",
                "lineno": 91
              }
            ]
          },
          {
            "nodeid": "practice/output/tests",
            "outcome": "passed",
            "result": [
              {
                "nodeid": "practice/output/tests/test_integration_agent.py",
                "type": "Module"
              },
              {
                "nodeid": "practice/output/tests/test_unit_agent.py",
                "type": "Module"
              }
            ]
          }
        ],
        "tests": [
          {
            "nodeid": "practice/output/tests/test_integration_agent.py::test_llm_initialization",
            "lineno": 27,
            "outcome": "passed",
            "keywords": [
              "test_llm_initialization",
              "test_integration_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.012957899998582434,
              "outcome": "passed"
            },
            "call": {
              "duration": 1.8243581000024278,
              "outcome": "passed"
            },
            "teardown": {
              "duration": 0.0037134000012883916,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_integration_agent.py::test_full_workflow",
            "lineno": 38,
            "outcome": "failed",
            "keywords": [
              "test_full_workflow",
              "test_integration_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.001999799998884555,
              "outcome": "passed"
            },
            "call": {
              "duration": 3.219621099997312,
              "outcome": "failed",
              "crash": {
                "path": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\output\\tests\\test_integration_agent.py",
                "lineno": 43,
                "message": "assert 'Mocked response' in \"Of course! I'd be happy to assist you with booking a flight. Could you please provide me with the following details so I can help you better?\\n\\n1. Departure city and destination city.\\n2. Dates of travel (departure and return, if it's a round trip).\\n3. Number of passengers and their age groups (adults, children, infants).\\n4. Preferred class (Economy, Business, First).\\n5. Any airline preferences.\\n6. Any special requirements (e.g., meal preferences, assistance needs).\\n\\nFeel free to share as much information as possible, and I'll find the best options for you.\""
              },
              "traceback": [
                {
                  "path": "practice\\output\\tests\\test_integration_agent.py",
                  "lineno": 43,
                  "message": "in test_full_workflow"
                }
              ],
              "longrepr": "practice\\output\\tests\\test_integration_agent.py:43: in test_full_workflow\n    assert \"Mocked response\" in response\nE   assert 'Mocked response' in \"Of course! I'd be happy to assist you with booking a flight. Could you please provide me with the following details so I can help you better?\\n\\n1. Departure city and destination city.\\n2. Dates of travel (departure and return, if it's a round trip).\\n3. Number of passengers and their age groups (adults, children, infants).\\n4. Preferred class (Economy, Business, First).\\n5. Any airline preferences.\\n6. Any special requirements (e.g., meal preferences, assistance needs).\\n\\nFeel free to share as much information as possible, and I'll find the best options for you.\""
            },
            "teardown": {
              "duration": 0.001372099999571219,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_integration_agent.py::test_state_graph_transitions",
            "lineno": 45,
            "outcome": "failed",
            "keywords": [
              "test_state_graph_transitions",
              "test_integration_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.002775699998892378,
              "outcome": "passed"
            },
            "call": {
              "duration": 0.0017345000014756806,
              "outcome": "failed",
              "crash": {
                "path": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\output\\tests\\test_integration_agent.py",
                "lineno": 52,
                "message": "AttributeError: 'StateGraph' object has no attribute 'transition'"
              },
              "traceback": [
                {
                  "path": "practice\\output\\tests\\test_integration_agent.py",
                  "lineno": 52,
                  "message": "in test_state_graph_transitions"
                }
              ],
              "longrepr": "practice\\output\\tests\\test_integration_agent.py:52: in test_state_graph_transitions\n    state_transitioned = sg.transition(sample_state)\n                         ^^^^^^^^^^^^^\nE   AttributeError: 'StateGraph' object has no attribute 'transition'"
            },
            "teardown": {
              "duration": 0.0010601000030874275,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_integration_agent.py::test_validation_error_handling",
            "lineno": 55,
            "outcome": "passed",
            "keywords": [
              "test_validation_error_handling",
              "test_integration_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.0009084999983315356,
              "outcome": "passed"
            },
            "call": {
              "duration": 0.0032830000018293504,
              "outcome": "passed"
            },
            "teardown": {
              "duration": 0.0007484999987354968,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_integration_agent.py::test_async_operation",
            "lineno": 60,
            "outcome": "failed",
            "keywords": [
              "test_async_operation",
              "asyncio",
              "pytestmark",
              "test_integration_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.00890849999996135,
              "outcome": "passed"
            },
            "call": {
              "duration": 0.004652399999031331,
              "outcome": "failed",
              "crash": {
                "path": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\myenv\\Lib\\site-packages\\pydantic\\main.py",
                "lineno": 1086,
                "message": "AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
              },
              "traceback": [
                {
                  "path": "practice\\output\\tests\\test_integration_agent.py",
                  "lineno": 67,
                  "message": "in test_async_operation"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1594,
                  "message": "in __enter__"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1605,
                  "message": "in __exit__"
                },
                {
                  "path": "myenv\\Lib\\site-packages\\pydantic\\main.py",
                  "lineno": 1086,
                  "message": "in __delattr__"
                }
              ],
              "longrepr": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1581: in __enter__\n    setattr(self.target, self.attribute, new_attr)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:997: in __setattr__\n    elif (setattr_handler := self._setattr_handler(name, value)) is not None:\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1044: in _setattr_handler\n    raise ValueError(f'\"{cls.__name__}\" object has no field \"{name}\"')\nE   ValueError: \"AzureChatOpenAI\" object has no field \"invoke\"\n\nDuring handling of the above exception, another exception occurred:\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1084: in __delattr__\n    object.__delattr__(self, item)\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'\n\nDuring handling of the above exception, another exception occurred:\npractice\\output\\tests\\test_integration_agent.py:67: in test_async_operation\n    with patch('agent.llm.invoke', new_callable=lambda: mock_invoke) as mock:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1594: in __enter__\n    if not self.__exit__(*sys.exc_info()):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1605: in __exit__\n    delattr(self.target, self.attribute)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1086: in __delattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
            },
            "teardown": {
              "duration": 0.002608999999210937,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_integration_agent.py::test_env_config",
            "lineno": 71,
            "outcome": "passed",
            "keywords": [
              "test_env_config",
              "test_integration_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.0009327000007033348,
              "outcome": "passed"
            },
            "call": {
              "duration": 0.0007392000006802846,
              "outcome": "passed"
            },
            "teardown": {
              "duration": 0.0005522999999811873,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_integration_agent.py::test_state_persistence_and_update",
            "lineno": 75,
            "outcome": "passed",
            "keywords": [
              "test_state_persistence_and_update",
              "test_integration_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.0010464999977557454,
              "outcome": "passed"
            },
            "call": {
              "duration": 0.0009640999996918254,
              "outcome": "passed"
            },
            "teardown": {
              "duration": 0.0005870000022696331,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_integration_agent.py::test_varied_user_inputs[Check my booking status.]",
            "lineno": 82,
            "outcome": "failed",
            "keywords": [
              "test_varied_user_inputs[Check my booking status.]",
              "parametrize",
              "pytestmark",
              "Check my booking status.",
              "test_integration_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.0019935999989684206,
              "outcome": "passed"
            },
            "call": {
              "duration": 3.0942858999987948,
              "outcome": "failed",
              "crash": {
                "path": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\output\\tests\\test_integration_agent.py",
                "lineno": 91,
                "message": "AssertionError: Failed for input: Check my booking status.\nassert 'Mocked response' in \"Sure! To check your booking status, I will need some details related to your reservation. Could you please provide one or more of the following?\\n\\n1. Your booking reference or confirmation number.\\n2. The email address or phone number used to make the reservation.\\n3. Your full name as it appears on the booking.\\n\\nWith this information, I'll be able to look up your booking and provide you with the latest status.\""
              },
              "traceback": [
                {
                  "path": "practice\\output\\tests\\test_integration_agent.py",
                  "lineno": 91,
                  "message": "in test_varied_user_inputs"
                }
              ],
              "longrepr": "practice\\output\\tests\\test_integration_agent.py:91: in test_varied_user_inputs\n    assert \"Mocked response\" in response, f\"Failed for input: {user_input}\"\nE   AssertionError: Failed for input: Check my booking status.\nE   assert 'Mocked response' in \"Sure! To check your booking status, I will need some details related to your reservation. Could you please provide one or more of the following?\\n\\n1. Your booking reference or confirmation number.\\n2. The email address or phone number used to make the reservation.\\n3. Your full name as it appears on the booking.\\n\\nWith this information, I'll be able to look up your booking and provide you with the latest status.\""
            },
            "teardown": {
              "duration": 0.001223200000822544,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_integration_agent.py::test_varied_user_inputs[Cancel my flight.]",
            "lineno": 82,
            "outcome": "failed",
            "keywords": [
              "test_varied_user_inputs[Cancel my flight.]",
              "parametrize",
              "pytestmark",
              "Cancel my flight.",
              "test_integration_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.0026135999978578184,
              "outcome": "passed"
            },
            "call": {
              "duration": 2.003524700001435,
              "outcome": "failed",
              "crash": {
                "path": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\output\\tests\\test_integration_agent.py",
                "lineno": 91,
                "message": "AssertionError: Failed for input: Cancel my flight.\nassert 'Mocked response' in \"I can assist you with canceling your flight. To proceed, could you please provide me with the following information?\\n\\n1. Your booking reference or confirmation number.\\n2. The email address or phone number used to make the reservation.\\n3. Your full name as it appears on the booking.\\n\\nAdditionally, it's important to note that cancellation policies and fees can vary based on the airline and fare type. I will provide you with any relevant details regarding those once I have your booking information.\""
              },
              "traceback": [
                {
                  "path": "practice\\output\\tests\\test_integration_agent.py",
                  "lineno": 91,
                  "message": "in test_varied_user_inputs"
                }
              ],
              "longrepr": "practice\\output\\tests\\test_integration_agent.py:91: in test_varied_user_inputs\n    assert \"Mocked response\" in response, f\"Failed for input: {user_input}\"\nE   AssertionError: Failed for input: Cancel my flight.\nE   assert 'Mocked response' in \"I can assist you with canceling your flight. To proceed, could you please provide me with the following information?\\n\\n1. Your booking reference or confirmation number.\\n2. The email address or phone number used to make the reservation.\\n3. Your full name as it appears on the booking.\\n\\nAdditionally, it's important to note that cancellation policies and fees can vary based on the airline and fare type. I will provide you with any relevant details regarding those once I have your booking information.\""
            },
            "teardown": {
              "duration": 0.0014743000028829556,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_integration_agent.py::test_varied_user_inputs[Help with flight options.]",
            "lineno": 82,
            "outcome": "failed",
            "keywords": [
              "test_varied_user_inputs[Help with flight options.]",
              "parametrize",
              "pytestmark",
              "Help with flight options.",
              "test_integration_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.0027306000010867137,
              "outcome": "passed"
            },
            "call": {
              "duration": 2.003037399997993,
              "outcome": "failed",
              "crash": {
                "path": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\output\\tests\\test_integration_agent.py",
                "lineno": 91,
                "message": "AssertionError: Failed for input: Help with flight options.\nassert 'Mocked response' in \"Certainly! I'd be happy to help you explore flight options. Could you please provide me with the following details to tailor the options to your needs?\\n\\n1. Departure city and destination city.\\n2. Preferred travel dates (departure and return, if it's a round trip).\\n3. Number of passengers and their age groups (adults, children, infants).\\n4. Preferred class (Economy, Business, First).\\n5. Any airline preferences.\\n6. Any special requirements (e.g., meal preferences, assistance needs).\\n\\nOnce I have this information, I'll find the best flight options for you!\""
              },
              "traceback": [
                {
                  "path": "practice\\output\\tests\\test_integration_agent.py",
                  "lineno": 91,
                  "message": "in test_varied_user_inputs"
                }
              ],
              "longrepr": "practice\\output\\tests\\test_integration_agent.py:91: in test_varied_user_inputs\n    assert \"Mocked response\" in response, f\"Failed for input: {user_input}\"\nE   AssertionError: Failed for input: Help with flight options.\nE   assert 'Mocked response' in \"Certainly! I'd be happy to help you explore flight options. Could you please provide me with the following details to tailor the options to your needs?\\n\\n1. Departure city and destination city.\\n2. Preferred travel dates (departure and return, if it's a round trip).\\n3. Number of passengers and their age groups (adults, children, infants).\\n4. Preferred class (Economy, Business, First).\\n5. Any airline preferences.\\n6. Any special requirements (e.g., meal preferences, assistance needs).\\n\\nOnce I have this information, I'll find the best flight options for you!\""
            },
            "teardown": {
              "duration": 0.0013518000014300924,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_integration_agent.py::test_timeout_conditions",
            "lineno": 93,
            "outcome": "failed",
            "keywords": [
              "test_timeout_conditions",
              "test_integration_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.0013824999987264164,
              "outcome": "passed"
            },
            "call": {
              "duration": 0.0026954999993904494,
              "outcome": "failed",
              "crash": {
                "path": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\myenv\\Lib\\site-packages\\pydantic\\main.py",
                "lineno": 1086,
                "message": "AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
              },
              "traceback": [
                {
                  "path": "practice\\output\\tests\\test_integration_agent.py",
                  "lineno": 98,
                  "message": "in test_timeout_conditions"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1594,
                  "message": "in __enter__"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1605,
                  "message": "in __exit__"
                },
                {
                  "path": "myenv\\Lib\\site-packages\\pydantic\\main.py",
                  "lineno": 1086,
                  "message": "in __delattr__"
                }
              ],
              "longrepr": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1581: in __enter__\n    setattr(self.target, self.attribute, new_attr)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:997: in __setattr__\n    elif (setattr_handler := self._setattr_handler(name, value)) is not None:\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1044: in _setattr_handler\n    raise ValueError(f'\"{cls.__name__}\" object has no field \"{name}\"')\nE   ValueError: \"AzureChatOpenAI\" object has no field \"invoke\"\n\nDuring handling of the above exception, another exception occurred:\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1084: in __delattr__\n    object.__delattr__(self, item)\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'\n\nDuring handling of the above exception, another exception occurred:\npractice\\output\\tests\\test_integration_agent.py:98: in test_timeout_conditions\n    with patch('agent.llm.invoke', side_effect=mock_long_operation):\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1594: in __enter__\n    if not self.__exit__(*sys.exc_info()):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1605: in __exit__\n    delattr(self.target, self.attribute)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1086: in __delattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
            },
            "teardown": {
              "duration": 0.0015243000016198494,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_unit_agent.py::test_state_initialization_happy_path",
            "lineno": 29,
            "outcome": "failed",
            "keywords": [
              "test_state_initialization_happy_path",
              "test_unit_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.0015301000021281652,
              "outcome": "passed"
            },
            "call": {
              "duration": 0.0011005999986082315,
              "outcome": "failed",
              "crash": {
                "path": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\output\\tests\\test_unit_agent.py",
                "lineno": 34,
                "message": "AttributeError: 'dict' object has no attribute 'type'"
              },
              "traceback": [
                {
                  "path": "practice\\output\\tests\\test_unit_agent.py",
                  "lineno": 34,
                  "message": "in test_state_initialization_happy_path"
                }
              ],
              "longrepr": "practice\\output\\tests\\test_unit_agent.py:34: in test_state_initialization_happy_path\n    assert state.messages[0].type == \"system\"\n           ^^^^^^^^^^^^^^^^^^^^^^\nE   AttributeError: 'dict' object has no attribute 'type'"
            },
            "teardown": {
              "duration": 0.0010570000013103709,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_unit_agent.py::test_state_initialization_invalid_input",
            "lineno": 37,
            "outcome": "failed",
            "keywords": [
              "test_state_initialization_invalid_input",
              "test_unit_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.0014602000010199845,
              "outcome": "passed"
            },
            "call": {
              "duration": 0.0033031999992090277,
              "outcome": "failed",
              "crash": {
                "path": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\output\\tests\\test_unit_agent.py",
                "lineno": 40,
                "message": "Failed: DID NOT RAISE <class 'pydantic_core._pydantic_core.ValidationError'>"
              },
              "traceback": [
                {
                  "path": "practice\\output\\tests\\test_unit_agent.py",
                  "lineno": 40,
                  "message": "in test_state_initialization_invalid_input"
                }
              ],
              "longrepr": "practice\\output\\tests\\test_unit_agent.py:40: in test_state_initialization_invalid_input\n    with pytest.raises(ValidationError):\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   Failed: DID NOT RAISE <class 'pydantic_core._pydantic_core.ValidationError'>"
            },
            "teardown": {
              "duration": 0.0012692999989667442,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_unit_agent.py::test_chatbot_function_happy_path",
            "lineno": 43,
            "outcome": "failed",
            "keywords": [
              "test_chatbot_function_happy_path",
              "test_unit_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.0009597999996913131,
              "outcome": "passed"
            },
            "call": {
              "duration": 0.0016790000008768402,
              "outcome": "failed",
              "crash": {
                "path": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\myenv\\Lib\\site-packages\\pydantic\\main.py",
                "lineno": 1086,
                "message": "AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
              },
              "traceback": [
                {
                  "path": "practice\\output\\tests\\test_unit_agent.py",
                  "lineno": 46,
                  "message": "in test_chatbot_function_happy_path"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1594,
                  "message": "in __enter__"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1605,
                  "message": "in __exit__"
                },
                {
                  "path": "myenv\\Lib\\site-packages\\pydantic\\main.py",
                  "lineno": 1086,
                  "message": "in __delattr__"
                }
              ],
              "longrepr": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1581: in __enter__\n    setattr(self.target, self.attribute, new_attr)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:997: in __setattr__\n    elif (setattr_handler := self._setattr_handler(name, value)) is not None:\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1044: in _setattr_handler\n    raise ValueError(f'\"{cls.__name__}\" object has no field \"{name}\"')\nE   ValueError: \"AzureChatOpenAI\" object has no field \"invoke\"\n\nDuring handling of the above exception, another exception occurred:\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1084: in __delattr__\n    object.__delattr__(self, item)\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'\n\nDuring handling of the above exception, another exception occurred:\npractice\\output\\tests\\test_unit_agent.py:46: in test_chatbot_function_happy_path\n    with patch('agent.llm.invoke', return_value=Mock(content=\"Flight booked to Paris\")) as mock_invoke:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1594: in __enter__\n    if not self.__exit__(*sys.exc_info()):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1605: in __exit__\n    delattr(self.target, self.attribute)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1086: in __delattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
            },
            "teardown": {
              "duration": 0.0010474000009708107,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_unit_agent.py::test_chatbot_function_edge_case_empty_message",
            "lineno": 52,
            "outcome": "failed",
            "keywords": [
              "test_chatbot_function_edge_case_empty_message",
              "test_unit_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.0010172000002057757,
              "outcome": "passed"
            },
            "call": {
              "duration": 0.0021970999987388495,
              "outcome": "failed",
              "crash": {
                "path": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\myenv\\Lib\\site-packages\\pydantic\\main.py",
                "lineno": 1086,
                "message": "AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
              },
              "traceback": [
                {
                  "path": "practice\\output\\tests\\test_unit_agent.py",
                  "lineno": 55,
                  "message": "in test_chatbot_function_edge_case_empty_message"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1594,
                  "message": "in __enter__"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1605,
                  "message": "in __exit__"
                },
                {
                  "path": "myenv\\Lib\\site-packages\\pydantic\\main.py",
                  "lineno": 1086,
                  "message": "in __delattr__"
                }
              ],
              "longrepr": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1581: in __enter__\n    setattr(self.target, self.attribute, new_attr)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:997: in __setattr__\n    elif (setattr_handler := self._setattr_handler(name, value)) is not None:\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1044: in _setattr_handler\n    raise ValueError(f'\"{cls.__name__}\" object has no field \"{name}\"')\nE   ValueError: \"AzureChatOpenAI\" object has no field \"invoke\"\n\nDuring handling of the above exception, another exception occurred:\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1084: in __delattr__\n    object.__delattr__(self, item)\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'\n\nDuring handling of the above exception, another exception occurred:\npractice\\output\\tests\\test_unit_agent.py:55: in test_chatbot_function_edge_case_empty_message\n    with patch('agent.llm.invoke', return_value=Mock(content=\"Please provide more details\")) as mock_invoke:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1594: in __enter__\n    if not self.__exit__(*sys.exc_info()):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1605: in __exit__\n    delattr(self.target, self.attribute)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1086: in __delattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
            },
            "teardown": {
              "duration": 0.0012281000017537735,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_unit_agent.py::test_chatbot_function_edge_case_long_message",
            "lineno": 60,
            "outcome": "failed",
            "keywords": [
              "test_chatbot_function_edge_case_long_message",
              "test_unit_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.0010586999997030944,
              "outcome": "passed"
            },
            "call": {
              "duration": 0.0022050000006856862,
              "outcome": "failed",
              "crash": {
                "path": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\myenv\\Lib\\site-packages\\pydantic\\main.py",
                "lineno": 1086,
                "message": "AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
              },
              "traceback": [
                {
                  "path": "practice\\output\\tests\\test_unit_agent.py",
                  "lineno": 64,
                  "message": "in test_chatbot_function_edge_case_long_message"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1594,
                  "message": "in __enter__"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1605,
                  "message": "in __exit__"
                },
                {
                  "path": "myenv\\Lib\\site-packages\\pydantic\\main.py",
                  "lineno": 1086,
                  "message": "in __delattr__"
                }
              ],
              "longrepr": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1581: in __enter__\n    setattr(self.target, self.attribute, new_attr)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:997: in __setattr__\n    elif (setattr_handler := self._setattr_handler(name, value)) is not None:\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1044: in _setattr_handler\n    raise ValueError(f'\"{cls.__name__}\" object has no field \"{name}\"')\nE   ValueError: \"AzureChatOpenAI\" object has no field \"invoke\"\n\nDuring handling of the above exception, another exception occurred:\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1084: in __delattr__\n    object.__delattr__(self, item)\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'\n\nDuring handling of the above exception, another exception occurred:\npractice\\output\\tests\\test_unit_agent.py:64: in test_chatbot_function_edge_case_long_message\n    with patch('agent.llm.invoke', return_value=Mock(content=\"Message too long to process\")) as mock_invoke:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1594: in __enter__\n    if not self.__exit__(*sys.exc_info()):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1605: in __exit__\n    delattr(self.target, self.attribute)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1086: in __delattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
            },
            "teardown": {
              "duration": 0.0011746999989554752,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_unit_agent.py::test_chatbot_function_with_memory",
            "lineno": 69,
            "outcome": "failed",
            "keywords": [
              "test_chatbot_function_with_memory",
              "test_unit_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.000999300002149539,
              "outcome": "passed"
            },
            "call": {
              "duration": 0.0022262999991653487,
              "outcome": "failed",
              "crash": {
                "path": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\myenv\\Lib\\site-packages\\pydantic\\main.py",
                "lineno": 1086,
                "message": "AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
              },
              "traceback": [
                {
                  "path": "practice\\output\\tests\\test_unit_agent.py",
                  "lineno": 75,
                  "message": "in test_chatbot_function_with_memory"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1594,
                  "message": "in __enter__"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1605,
                  "message": "in __exit__"
                },
                {
                  "path": "myenv\\Lib\\site-packages\\pydantic\\main.py",
                  "lineno": 1086,
                  "message": "in __delattr__"
                }
              ],
              "longrepr": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1581: in __enter__\n    setattr(self.target, self.attribute, new_attr)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:997: in __setattr__\n    elif (setattr_handler := self._setattr_handler(name, value)) is not None:\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1044: in _setattr_handler\n    raise ValueError(f'\"{cls.__name__}\" object has no field \"{name}\"')\nE   ValueError: \"AzureChatOpenAI\" object has no field \"invoke\"\n\nDuring handling of the above exception, another exception occurred:\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1084: in __delattr__\n    object.__delattr__(self, item)\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'\n\nDuring handling of the above exception, another exception occurred:\npractice\\output\\tests\\test_unit_agent.py:75: in test_chatbot_function_with_memory\n    with patch('agent.llm.invoke', return_value=Mock(content=\"Continuing from previous booking history\")) as mock_invoke:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1594: in __enter__\n    if not self.__exit__(*sys.exc_info()):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1605: in __exit__\n    delattr(self.target, self.attribute)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1086: in __delattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
            },
            "teardown": {
              "duration": 0.0011879000012413599,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_unit_agent.py::test_chatbot_function_error_handling",
            "lineno": 80,
            "outcome": "failed",
            "keywords": [
              "test_chatbot_function_error_handling",
              "test_unit_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.0010154999981750734,
              "outcome": "passed"
            },
            "call": {
              "duration": 0.0020804999985557515,
              "outcome": "failed",
              "crash": {
                "path": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\myenv\\Lib\\site-packages\\pydantic\\main.py",
                "lineno": 1086,
                "message": "AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
              },
              "traceback": [
                {
                  "path": "practice\\output\\tests\\test_unit_agent.py",
                  "lineno": 83,
                  "message": "in test_chatbot_function_error_handling"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1594,
                  "message": "in __enter__"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1605,
                  "message": "in __exit__"
                },
                {
                  "path": "myenv\\Lib\\site-packages\\pydantic\\main.py",
                  "lineno": 1086,
                  "message": "in __delattr__"
                }
              ],
              "longrepr": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1581: in __enter__\n    setattr(self.target, self.attribute, new_attr)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:997: in __setattr__\n    elif (setattr_handler := self._setattr_handler(name, value)) is not None:\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1044: in _setattr_handler\n    raise ValueError(f'\"{cls.__name__}\" object has no field \"{name}\"')\nE   ValueError: \"AzureChatOpenAI\" object has no field \"invoke\"\n\nDuring handling of the above exception, another exception occurred:\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1084: in __delattr__\n    object.__delattr__(self, item)\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'\n\nDuring handling of the above exception, another exception occurred:\npractice\\output\\tests\\test_unit_agent.py:83: in test_chatbot_function_error_handling\n    with patch('agent.llm.invoke', side_effect=Exception(\"API error\")) as mock_invoke:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1594: in __enter__\n    if not self.__exit__(*sys.exc_info()):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1605: in __exit__\n    delattr(self.target, self.attribute)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1086: in __delattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
            },
            "teardown": {
              "duration": 0.0011902000005648006,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_unit_agent.py::test_chat_parameterized[Find flights to Berlin-Flights found to Berlin]",
            "lineno": 91,
            "outcome": "failed",
            "keywords": [
              "test_chat_parameterized[Find flights to Berlin-Flights found to Berlin]",
              "parametrize",
              "pytestmark",
              "Find flights to Berlin-Flights found to Berlin",
              "test_unit_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.0014260999996622559,
              "outcome": "passed"
            },
            "call": {
              "duration": 0.002204899999924237,
              "outcome": "failed",
              "crash": {
                "path": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\myenv\\Lib\\site-packages\\pydantic\\main.py",
                "lineno": 1086,
                "message": "AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
              },
              "traceback": [
                {
                  "path": "practice\\output\\tests\\test_unit_agent.py",
                  "lineno": 98,
                  "message": "in test_chat_parameterized"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1594,
                  "message": "in __enter__"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1605,
                  "message": "in __exit__"
                },
                {
                  "path": "myenv\\Lib\\site-packages\\pydantic\\main.py",
                  "lineno": 1086,
                  "message": "in __delattr__"
                }
              ],
              "longrepr": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1581: in __enter__\n    setattr(self.target, self.attribute, new_attr)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:997: in __setattr__\n    elif (setattr_handler := self._setattr_handler(name, value)) is not None:\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1044: in _setattr_handler\n    raise ValueError(f'\"{cls.__name__}\" object has no field \"{name}\"')\nE   ValueError: \"AzureChatOpenAI\" object has no field \"invoke\"\n\nDuring handling of the above exception, another exception occurred:\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1084: in __delattr__\n    object.__delattr__(self, item)\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'\n\nDuring handling of the above exception, another exception occurred:\npractice\\output\\tests\\test_unit_agent.py:98: in test_chat_parameterized\n    with patch('agent.llm.invoke', return_value=Mock(content=expected_output)) as mock_invoke:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1594: in __enter__\n    if not self.__exit__(*sys.exc_info()):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1605: in __exit__\n    delattr(self.target, self.attribute)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1086: in __delattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
            },
            "teardown": {
              "duration": 0.0013541999978770036,
              "outcome": "passed"
            }
          },
          {
            "nodeid": "practice/output/tests/test_unit_agent.py::test_chat_parameterized[Check my flight status-Your flight status is on time]",
            "lineno": 91,
            "outcome": "failed",
            "keywords": [
              "test_chat_parameterized[Check my flight status-Your flight status is on time]",
              "parametrize",
              "pytestmark",
              "Check my flight status-Your flight status is on time",
              "test_unit_agent.py",
              "tests",
              "output",
              "practice",
              "Test_Suite_Generator_agent",
              ""
            ],
            "setup": {
              "duration": 0.0014661000022897497,
              "outcome": "passed"
            },
            "call": {
              "duration": 0.002194499997131061,
              "outcome": "failed",
              "crash": {
                "path": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\myenv\\Lib\\site-packages\\pydantic\\main.py",
                "lineno": 1086,
                "message": "AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
              },
              "traceback": [
                {
                  "path": "practice\\output\\tests\\test_unit_agent.py",
                  "lineno": 98,
                  "message": "in test_chat_parameterized"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1594,
                  "message": "in __enter__"
                },
                {
                  "path": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py",
                  "lineno": 1605,
                  "message": "in __exit__"
                },
                {
                  "path": "myenv\\Lib\\site-packages\\pydantic\\main.py",
                  "lineno": 1086,
                  "message": "in __delattr__"
                }
              ],
              "longrepr": "C:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1581: in __enter__\n    setattr(self.target, self.attribute, new_attr)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:997: in __setattr__\n    elif (setattr_handler := self._setattr_handler(name, value)) is not None:\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1044: in _setattr_handler\n    raise ValueError(f'\"{cls.__name__}\" object has no field \"{name}\"')\nE   ValueError: \"AzureChatOpenAI\" object has no field \"invoke\"\n\nDuring handling of the above exception, another exception occurred:\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1084: in __delattr__\n    object.__delattr__(self, item)\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'\n\nDuring handling of the above exception, another exception occurred:\npractice\\output\\tests\\test_unit_agent.py:98: in test_chat_parameterized\n    with patch('agent.llm.invoke', return_value=Mock(content=expected_output)) as mock_invoke:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1594: in __enter__\n    if not self.__exit__(*sys.exc_info()):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\rinshi.kumari\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py:1605: in __exit__\n    delattr(self.target, self.attribute)\nmyenv\\Lib\\site-packages\\pydantic\\main.py:1086: in __delattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\nE   AttributeError: 'AzureChatOpenAI' object has no attribute 'invoke'"
            },
            "teardown": {
              "duration": 0.001218700002937112,
              "outcome": "passed"
            }
          }
        ],
        "warnings": [
          {
            "message": "websockets.legacy is deprecated; see https://websockets.readthedocs.io/en/stable/howto/upgrade.html for upgrade instructions",
            "category": "DeprecationWarning",
            "when": "collect",
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\myenv\\Lib\\site-packages\\websockets\\legacy\\__init__.py",
            "lineno": 6
          },
          {
            "message": "Accessing the 'model_fields' attribute on the instance is deprecated. Instead, you should access this attribute from the model class. Deprecated in Pydantic V2.11 to be removed in V3.0.",
            "category": "PydanticDeprecatedSince211",
            "when": "runtest",
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\myenv\\Lib\\site-packages\\langgraph\\utils\\fields.py",
            "lineno": 166
          },
          {
            "message": "Accessing the 'model_fields' attribute on the instance is deprecated. Instead, you should access this attribute from the model class. Deprecated in Pydantic V2.11 to be removed in V3.0.",
            "category": "PydanticDeprecatedSince211",
            "when": "runtest",
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\myenv\\Lib\\site-packages\\langgraph\\utils\\fields.py",
            "lineno": 166
          },
          {
            "message": "Accessing the 'model_fields' attribute on the instance is deprecated. Instead, you should access this attribute from the model class. Deprecated in Pydantic V2.11 to be removed in V3.0.",
            "category": "PydanticDeprecatedSince211",
            "when": "runtest",
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\myenv\\Lib\\site-packages\\langgraph\\utils\\fields.py",
            "lineno": 166
          },
          {
            "message": "Accessing the 'model_fields' attribute on the instance is deprecated. Instead, you should access this attribute from the model class. Deprecated in Pydantic V2.11 to be removed in V3.0.",
            "category": "PydanticDeprecatedSince211",
            "when": "runtest",
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\myenv\\Lib\\site-packages\\langgraph\\utils\\fields.py",
            "lineno": 166
          }
        ]
      },
      "success": false
    },
    "static_analysis": {
      "file_path": "practice",
      "ruff": {
        "tool": "ruff",
        "success": true,
        "issues": [
          {
            "cell": null,
            "code": "E402",
            "end_location": {
              "column": 45,
              "row": 11
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\agent.py",
            "fix": null,
            "location": {
              "column": 1,
              "row": 11
            },
            "message": "Module level import not at top of file",
            "noqa_row": 11,
            "url": "https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file"
          },
          {
            "cell": null,
            "code": "E402",
            "end_location": {
              "column": 29,
              "row": 21
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\agent.py",
            "fix": null,
            "location": {
              "column": 1,
              "row": 21
            },
            "message": "Module level import not at top of file",
            "noqa_row": 21,
            "url": "https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file"
          },
          {
            "cell": null,
            "code": "E402",
            "end_location": {
              "column": 51,
              "row": 22
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\agent.py",
            "fix": null,
            "location": {
              "column": 1,
              "row": 22
            },
            "message": "Module level import not at top of file",
            "noqa_row": 22,
            "url": "https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file"
          },
          {
            "cell": null,
            "code": "E402",
            "end_location": {
              "column": 49,
              "row": 23
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\agent.py",
            "fix": null,
            "location": {
              "column": 1,
              "row": 23
            },
            "message": "Module level import not at top of file",
            "noqa_row": 23,
            "url": "https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file"
          },
          {
            "cell": null,
            "code": "E402",
            "end_location": {
              "column": 39,
              "row": 24
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\agent.py",
            "fix": null,
            "location": {
              "column": 1,
              "row": 24
            },
            "message": "Module level import not at top of file",
            "noqa_row": 24,
            "url": "https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file"
          },
          {
            "cell": null,
            "code": "F811",
            "end_location": {
              "column": 39,
              "row": 24
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\agent.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "",
                  "end_location": {
                    "column": 1,
                    "row": 25
                  },
                  "location": {
                    "column": 1,
                    "row": 24
                  }
                }
              ],
              "message": "Remove definition: `StateGraph`"
            },
            "location": {
              "column": 29,
              "row": 24
            },
            "message": "Redefinition of unused `StateGraph` from line 22",
            "noqa_row": 24,
            "url": "https://docs.astral.sh/ruff/rules/redefined-while-unused"
          },
          {
            "cell": null,
            "code": "E402",
            "end_location": {
              "column": 58,
              "row": 25
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\agent.py",
            "fix": null,
            "location": {
              "column": 1,
              "row": 25
            },
            "message": "Module level import not at top of file",
            "noqa_row": 25,
            "url": "https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file"
          },
          {
            "cell": null,
            "code": "E402",
            "end_location": {
              "column": 52,
              "row": 26
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\agent.py",
            "fix": null,
            "location": {
              "column": 1,
              "row": 26
            },
            "message": "Module level import not at top of file",
            "noqa_row": 26,
            "url": "https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file"
          },
          {
            "cell": null,
            "code": "E402",
            "end_location": {
              "column": 20,
              "row": 27
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\agent.py",
            "fix": null,
            "location": {
              "column": 1,
              "row": 27
            },
            "message": "Module level import not at top of file",
            "noqa_row": 27,
            "url": "https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file"
          },
          {
            "cell": null,
            "code": "F401",
            "end_location": {
              "column": 20,
              "row": 27
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\agent.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "",
                  "end_location": {
                    "column": 1,
                    "row": 28
                  },
                  "location": {
                    "column": 1,
                    "row": 27
                  }
                }
              ],
              "message": "Remove unused import: `gradio`"
            },
            "location": {
              "column": 18,
              "row": 27
            },
            "message": "`gradio` imported but unused",
            "noqa_row": 27,
            "url": "https://docs.astral.sh/ruff/rules/unused-import"
          },
          {
            "cell": null,
            "code": "E402",
            "end_location": {
              "column": 31,
              "row": 28
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\agent.py",
            "fix": null,
            "location": {
              "column": 1,
              "row": 28
            },
            "message": "Module level import not at top of file",
            "noqa_row": 28,
            "url": "https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file"
          },
          {
            "cell": null,
            "code": "F401",
            "end_location": {
              "column": 31,
              "row": 5
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\output\\tests\\test_integration_agent.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "from unittest.mock import patch, MagicMock",
                  "end_location": {
                    "column": 49,
                    "row": 5
                  },
                  "location": {
                    "column": 1,
                    "row": 5
                  }
                }
              ],
              "message": "Remove unused import: `unittest.mock.Mock`"
            },
            "location": {
              "column": 27,
              "row": 5
            },
            "message": "`unittest.mock.Mock` imported but unused",
            "noqa_row": 5,
            "url": "https://docs.astral.sh/ruff/rules/unused-import"
          },
          {
            "cell": null,
            "code": "F811",
            "end_location": {
              "column": 32,
              "row": 7
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\output\\tests\\test_integration_agent.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "",
                  "end_location": {
                    "column": 1,
                    "row": 8
                  },
                  "location": {
                    "column": 1,
                    "row": 7
                  }
                }
              ],
              "message": "Remove definition: `patch`"
            },
            "location": {
              "column": 27,
              "row": 7
            },
            "message": "Redefinition of unused `patch` from line 5",
            "noqa_row": 7,
            "url": "https://docs.astral.sh/ruff/rules/redefined-while-unused"
          },
          {
            "cell": null,
            "code": "F811",
            "end_location": {
              "column": 43,
              "row": 7
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\output\\tests\\test_integration_agent.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "",
                  "end_location": {
                    "column": 1,
                    "row": 8
                  },
                  "location": {
                    "column": 1,
                    "row": 7
                  }
                }
              ],
              "message": "Remove definition: `MagicMock`"
            },
            "location": {
              "column": 34,
              "row": 7
            },
            "message": "Redefinition of unused `MagicMock` from line 5",
            "noqa_row": 7,
            "url": "https://docs.astral.sh/ruff/rules/redefined-while-unused"
          },
          {
            "cell": null,
            "code": "F841",
            "end_location": {
              "column": 8,
              "row": 29
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\output\\tests\\test_integration_agent.py",
            "fix": {
              "applicability": "unsafe",
              "edits": [
                {
                  "content": "",
                  "end_location": {
                    "column": 11,
                    "row": 29
                  },
                  "location": {
                    "column": 5,
                    "row": 29
                  }
                }
              ],
              "message": "Remove assignment to unused variable `llm`"
            },
            "location": {
              "column": 5,
              "row": 29
            },
            "message": "Local variable `llm` is assigned to but never used",
            "noqa_row": 29,
            "url": "https://docs.astral.sh/ruff/rules/unused-variable"
          },
          {
            "cell": null,
            "code": "F841",
            "end_location": {
              "column": 17,
              "row": 101
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\output\\tests\\test_integration_agent.py",
            "fix": {
              "applicability": "unsafe",
              "edits": [
                {
                  "content": "",
                  "end_location": {
                    "column": 20,
                    "row": 101
                  },
                  "location": {
                    "column": 9,
                    "row": 101
                  }
                }
              ],
              "message": "Remove assignment to unused variable `response`"
            },
            "location": {
              "column": 9,
              "row": 101
            },
            "message": "Local variable `response` is assigned to but never used",
            "noqa_row": 101,
            "url": "https://docs.astral.sh/ruff/rules/unused-variable"
          },
          {
            "cell": null,
            "code": "F401",
            "end_location": {
              "column": 49,
              "row": 5
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\output\\tests\\test_unit_agent.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "from unittest.mock import Mock, patch",
                  "end_location": {
                    "column": 49,
                    "row": 5
                  },
                  "location": {
                    "column": 1,
                    "row": 5
                  }
                }
              ],
              "message": "Remove unused import: `unittest.mock.MagicMock`"
            },
            "location": {
              "column": 40,
              "row": 5
            },
            "message": "`unittest.mock.MagicMock` imported but unused",
            "noqa_row": 5,
            "url": "https://docs.astral.sh/ruff/rules/unused-import"
          },
          {
            "cell": null,
            "code": "F811",
            "end_location": {
              "column": 32,
              "row": 8
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\output\\tests\\test_unit_agent.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "",
                  "end_location": {
                    "column": 1,
                    "row": 9
                  },
                  "location": {
                    "column": 1,
                    "row": 8
                  }
                }
              ],
              "message": "Remove definition: `patch`"
            },
            "location": {
              "column": 27,
              "row": 8
            },
            "message": "Redefinition of unused `patch` from line 5",
            "noqa_row": 8,
            "url": "https://docs.astral.sh/ruff/rules/redefined-while-unused"
          },
          {
            "cell": null,
            "code": "F811",
            "end_location": {
              "column": 38,
              "row": 8
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\output\\tests\\test_unit_agent.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "",
                  "end_location": {
                    "column": 1,
                    "row": 9
                  },
                  "location": {
                    "column": 1,
                    "row": 8
                  }
                }
              ],
              "message": "Remove definition: `Mock`"
            },
            "location": {
              "column": 34,
              "row": 8
            },
            "message": "Redefinition of unused `Mock` from line 5",
            "noqa_row": 8,
            "url": "https://docs.astral.sh/ruff/rules/redefined-while-unused"
          },
          {
            "cell": null,
            "code": "F841",
            "end_location": {
              "column": 19,
              "row": 85
            },
            "filename": "D:\\OneDrive - Olam International\\Desktop\\Test_Suite_Generator_agent\\practice\\output\\tests\\test_unit_agent.py",
            "fix": {
              "applicability": "unsafe",
              "edits": [
                {
                  "content": "",
                  "end_location": {
                    "column": 22,
                    "row": 85
                  },
                  "location": {
                    "column": 13,
                    "row": 85
                  }
                }
              ],
              "message": "Remove assignment to unused variable `result`"
            },
            "location": {
              "column": 13,
              "row": 85
            },
            "message": "Local variable `result` is assigned to but never used",
            "noqa_row": 85,
            "url": "https://docs.astral.sh/ruff/rules/unused-variable"
          }
        ],
        "count": 20,
        "exit_code": 1
      },
      "mypy": {
        "tool": "mypy",
        "success": false,
        "error": "Timeout"
      },
      "bandit": {
        "tool": "bandit",
        "success": true,
        "issues": [],
        "count": 0,
        "exit_code": 0
      },
      "pylint": {
        "tool": "pylint",
        "success": true,
        "issues": [
          {
            "type": "convention",
            "module": "agent",
            "obj": "",
            "line": 10,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\agent.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
          },
          {
            "type": "convention",
            "module": "agent",
            "obj": "",
            "line": 12,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\agent.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
          },
          {
            "type": "convention",
            "module": "agent",
            "obj": "",
            "line": 56,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\agent.py",
            "symbol": "line-too-long",
            "message": "Line too long (413/100)",
            "message-id": "C0301"
          },
          {
            "type": "convention",
            "module": "agent",
            "obj": "",
            "line": 62,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\agent.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
          },
          {
            "type": "convention",
            "module": "agent",
            "obj": "",
            "line": 11,
            "column": 0,
            "endLine": 11,
            "endColumn": 44,
            "path": "practice\\agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from langchain_openai import AzureChatOpenAI\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "convention",
            "module": "agent",
            "obj": "",
            "line": 21,
            "column": 0,
            "endLine": 21,
            "endColumn": 28,
            "path": "practice\\agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from typing import Annotated\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "convention",
            "module": "agent",
            "obj": "",
            "line": 22,
            "column": 0,
            "endLine": 22,
            "endColumn": 50,
            "path": "practice\\agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from langgraph.graph import StateGraph, START, END\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "convention",
            "module": "agent",
            "obj": "",
            "line": 23,
            "column": 0,
            "endLine": 23,
            "endColumn": 48,
            "path": "practice\\agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from langgraph.graph.message import add_messages\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "warning",
            "module": "agent",
            "obj": "",
            "line": 24,
            "column": 0,
            "endLine": 24,
            "endColumn": 38,
            "path": "practice\\agent.py",
            "symbol": "reimported",
            "message": "Reimport 'StateGraph' (imported line 22)",
            "message-id": "W0404"
          },
          {
            "type": "convention",
            "module": "agent",
            "obj": "",
            "line": 24,
            "column": 0,
            "endLine": 24,
            "endColumn": 38,
            "path": "practice\\agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from langgraph.graph import StateGraph\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "convention",
            "module": "agent",
            "obj": "",
            "line": 25,
            "column": 0,
            "endLine": 25,
            "endColumn": 57,
            "path": "practice\\agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from langchain.schema import HumanMessage, SystemMessage\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "convention",
            "module": "agent",
            "obj": "",
            "line": 26,
            "column": 0,
            "endLine": 26,
            "endColumn": 51,
            "path": "practice\\agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from langgraph.checkpoint.memory import MemorySaver\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "convention",
            "module": "agent",
            "obj": "",
            "line": 27,
            "column": 0,
            "endLine": 27,
            "endColumn": 19,
            "path": "practice\\agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"import gradio as gr\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "convention",
            "module": "agent",
            "obj": "",
            "line": 28,
            "column": 0,
            "endLine": 28,
            "endColumn": 30,
            "path": "practice\\agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from pydantic import BaseModel\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "warning",
            "module": "agent",
            "obj": "chat",
            "line": 52,
            "column": 26,
            "endLine": 52,
            "endColumn": 33,
            "path": "practice\\agent.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'history'",
            "message-id": "W0613"
          },
          {
            "type": "convention",
            "module": "agent",
            "obj": "",
            "line": 21,
            "column": 0,
            "endLine": 21,
            "endColumn": 28,
            "path": "practice\\agent.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"typing.Annotated\" should be placed before third party imports \"dotenv.load_dotenv\", \"langchain_openai.AzureChatOpenAI\"",
            "message-id": "C0411"
          },
          {
            "type": "convention",
            "module": "agent",
            "obj": "",
            "line": 26,
            "column": 0,
            "endLine": 26,
            "endColumn": 51,
            "path": "practice\\agent.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package langgraph are not grouped",
            "message-id": "C0412"
          },
          {
            "type": "warning",
            "module": "agent",
            "obj": "",
            "line": 27,
            "column": 0,
            "endLine": 27,
            "endColumn": 19,
            "path": "practice\\agent.py",
            "symbol": "unused-import",
            "message": "Unused gradio imported as gr",
            "message-id": "W0611"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 18,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 51,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 66,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 97,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 107,
            "column": 110,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 107,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 108,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 5,
            "column": 0,
            "endLine": 5,
            "endColumn": 48,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from unittest.mock import Mock, patch, MagicMock\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 6,
            "column": 0,
            "endLine": 6,
            "endColumn": 13,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"import pytest\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 7,
            "column": 0,
            "endLine": 7,
            "endColumn": 42,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "reimported",
            "message": "Reimport 'patch' (imported line 5)",
            "message-id": "W0404"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 7,
            "column": 0,
            "endLine": 7,
            "endColumn": 42,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "reimported",
            "message": "Reimport 'MagicMock' (imported line 5)",
            "message-id": "W0404"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 7,
            "column": 0,
            "endLine": 7,
            "endColumn": 42,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from unittest.mock import patch, MagicMock\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 8,
            "column": 0,
            "endLine": 8,
            "endColumn": 50,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from langgraph.graph import StateGraph, START, END\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 9,
            "column": 0,
            "endLine": 9,
            "endColumn": 44,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from langchain_openai import AzureChatOpenAI\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 10,
            "column": 0,
            "endLine": 10,
            "endColumn": 36,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from pydantic import ValidationError\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 11,
            "column": 0,
            "endLine": 11,
            "endColumn": 29,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from agent import chat, State\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "mock_llm",
            "line": 16,
            "column": 43,
            "endLine": 16,
            "endColumn": 50,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "invalid-name",
            "message": "Variable name \"MockLLM\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "test_llm_initialization",
            "line": 28,
            "column": 28,
            "endLine": 28,
            "endColumn": 36,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'mock_llm' from outer scope (line 15)",
            "message-id": "W0621"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "test_llm_initialization",
            "line": 29,
            "column": 4,
            "endLine": 29,
            "endColumn": 7,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'llm'",
            "message-id": "W0612"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "test_full_workflow",
            "line": 39,
            "column": 23,
            "endLine": 39,
            "endColumn": 31,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'mock_llm' from outer scope (line 15)",
            "message-id": "W0621"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "test_full_workflow",
            "line": 39,
            "column": 23,
            "endLine": 39,
            "endColumn": 31,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'mock_llm'",
            "message-id": "W0613"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "test_state_graph_transitions",
            "line": 46,
            "column": 33,
            "endLine": 46,
            "endColumn": 45,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'sample_state' from outer scope (line 24)",
            "message-id": "W0621"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "test_state_graph_transitions",
            "line": 46,
            "column": 47,
            "endLine": 46,
            "endColumn": 55,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'mock_llm' from outer scope (line 15)",
            "message-id": "W0621"
          },
          {
            "type": "error",
            "module": "output.tests.test_integration_agent",
            "obj": "test_state_graph_transitions",
            "line": 52,
            "column": 25,
            "endLine": 52,
            "endColumn": 38,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "no-member",
            "message": "Instance of 'StateGraph' has no 'transition' member",
            "message-id": "E1101"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "test_state_graph_transitions",
            "line": 46,
            "column": 47,
            "endLine": 46,
            "endColumn": 55,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'mock_llm'",
            "message-id": "W0613"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "test_async_operation.mock_invoke",
            "line": 64,
            "column": 26,
            "endLine": 64,
            "endColumn": 34,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'messages'",
            "message-id": "W0613"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "test_state_persistence_and_update",
            "line": 76,
            "column": 38,
            "endLine": 76,
            "endColumn": 50,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'sample_state' from outer scope (line 24)",
            "message-id": "W0621"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "test_varied_user_inputs",
            "line": 88,
            "column": 40,
            "endLine": 88,
            "endColumn": 48,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'mock_llm' from outer scope (line 15)",
            "message-id": "W0621"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "test_varied_user_inputs",
            "line": 88,
            "column": 40,
            "endLine": 88,
            "endColumn": 48,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'mock_llm'",
            "message-id": "W0613"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "test_timeout_conditions.mock_long_operation",
            "line": 95,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'args'",
            "message-id": "W0613"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "test_timeout_conditions.mock_long_operation",
            "line": 95,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'kwargs'",
            "message-id": "W0613"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "test_timeout_conditions",
            "line": 99,
            "column": 8,
            "endLine": 99,
            "endColumn": 19,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (time)",
            "message-id": "C0415"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "test_timeout_conditions",
            "line": 94,
            "column": 28,
            "endLine": 94,
            "endColumn": 39,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'monkeypatch'",
            "message-id": "W0613"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "test_timeout_conditions",
            "line": 101,
            "column": 8,
            "endLine": 101,
            "endColumn": 16,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'response'",
            "message-id": "W0612"
          },
          {
            "type": "convention",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 7,
            "column": 0,
            "endLine": 7,
            "endColumn": 42,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"unittest.mock.patch\" should be placed before third party import \"pytest\"",
            "message-id": "C0411"
          },
          {
            "type": "warning",
            "module": "output.tests.test_integration_agent",
            "obj": "",
            "line": 5,
            "column": 0,
            "endLine": 5,
            "endColumn": 48,
            "path": "practice\\output\\tests\\test_integration_agent.py",
            "symbol": "unused-import",
            "message": "Unused Mock imported from unittest.mock",
            "message-id": "W0611"
          },
          {
            "type": "convention",
            "module": "output.tests.test_unit_agent",
            "obj": "",
            "line": 46,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
          },
          {
            "type": "convention",
            "module": "output.tests.test_unit_agent",
            "obj": "",
            "line": 55,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
          },
          {
            "type": "convention",
            "module": "output.tests.test_unit_agent",
            "obj": "",
            "line": 64,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
          },
          {
            "type": "convention",
            "module": "output.tests.test_unit_agent",
            "obj": "",
            "line": 75,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "line-too-long",
            "message": "Line too long (121/100)",
            "message-id": "C0301"
          },
          {
            "type": "convention",
            "module": "output.tests.test_unit_agent",
            "obj": "",
            "line": 89,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
          },
          {
            "type": "convention",
            "module": "output.tests.test_unit_agent",
            "obj": "",
            "line": 106,
            "column": 0,
            "endLine": null,
            "endColumn": null,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
          },
          {
            "type": "convention",
            "module": "output.tests.test_unit_agent",
            "obj": "",
            "line": 5,
            "column": 0,
            "endLine": 5,
            "endColumn": 48,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from unittest.mock import Mock, patch, MagicMock\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "convention",
            "module": "output.tests.test_unit_agent",
            "obj": "",
            "line": 7,
            "column": 0,
            "endLine": 7,
            "endColumn": 13,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"import pytest\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "warning",
            "module": "output.tests.test_unit_agent",
            "obj": "",
            "line": 8,
            "column": 0,
            "endLine": 8,
            "endColumn": 37,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "reimported",
            "message": "Reimport 'patch' (imported line 5)",
            "message-id": "W0404"
          },
          {
            "type": "warning",
            "module": "output.tests.test_unit_agent",
            "obj": "",
            "line": 8,
            "column": 0,
            "endLine": 8,
            "endColumn": 37,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "reimported",
            "message": "Reimport 'Mock' (imported line 5)",
            "message-id": "W0404"
          },
          {
            "type": "convention",
            "module": "output.tests.test_unit_agent",
            "obj": "",
            "line": 8,
            "column": 0,
            "endLine": 8,
            "endColumn": 37,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from unittest.mock import patch, Mock\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "convention",
            "module": "output.tests.test_unit_agent",
            "obj": "",
            "line": 9,
            "column": 0,
            "endLine": 9,
            "endColumn": 36,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from pydantic import ValidationError\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "convention",
            "module": "output.tests.test_unit_agent",
            "obj": "",
            "line": 10,
            "column": 0,
            "endLine": 10,
            "endColumn": 29,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from agent import State, chat\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "warning",
            "module": "output.tests.test_unit_agent",
            "obj": "test_state_initialization_happy_path",
            "line": 30,
            "column": 41,
            "endLine": 30,
            "endColumn": 61,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'valid_state_messages' from outer scope (line 14)",
            "message-id": "W0621"
          },
          {
            "type": "warning",
            "module": "output.tests.test_unit_agent",
            "obj": "test_state_initialization_invalid_input",
            "line": 38,
            "column": 44,
            "endLine": 38,
            "endColumn": 66,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'invalid_state_messages' from outer scope (line 23)",
            "message-id": "W0621"
          },
          {
            "type": "warning",
            "module": "output.tests.test_unit_agent",
            "obj": "test_chatbot_function_happy_path",
            "line": 44,
            "column": 37,
            "endLine": 44,
            "endColumn": 57,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'valid_state_messages' from outer scope (line 14)",
            "message-id": "W0621"
          },
          {
            "type": "warning",
            "module": "output.tests.test_unit_agent",
            "obj": "test_chatbot_function_error_handling",
            "line": 86,
            "column": 15,
            "endLine": 86,
            "endColumn": 24,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "broad-exception-caught",
            "message": "Catching too general exception Exception",
            "message-id": "W0718"
          },
          {
            "type": "warning",
            "module": "output.tests.test_unit_agent",
            "obj": "test_chatbot_function_error_handling",
            "line": 85,
            "column": 12,
            "endLine": 85,
            "endColumn": 18,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'result'",
            "message-id": "W0612"
          },
          {
            "type": "convention",
            "module": "output.tests.test_unit_agent",
            "obj": "",
            "line": 8,
            "column": 0,
            "endLine": 8,
            "endColumn": 37,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"unittest.mock.patch\" should be placed before third party import \"pytest\"",
            "message-id": "C0411"
          },
          {
            "type": "warning",
            "module": "output.tests.test_unit_agent",
            "obj": "",
            "line": 5,
            "column": 0,
            "endLine": 5,
            "endColumn": 48,
            "path": "practice\\output\\tests\\test_unit_agent.py",
            "symbol": "unused-import",
            "message": "Unused MagicMock imported from unittest.mock",
            "message-id": "W0611"
          }
        ],
        "count": 74,
        "exit_code": 22
      },
      "summary": {
        "total_issues": 94,
        "tools_run": 4,
        "tools_successful": 3,
        "severity_breakdown": {
          "error": 1,
          "warning": 29,
          "info": 64,
          "security": 0
        },
        "quality_score": 6,
        "recommendations": [
          "Fix type errors and critical issues",
          "Consider addressing style and convention warnings",
          "Code quality is below acceptable threshold (70)"
        ]
      }
    },
    "code_analysis": {
      "agent_path": "practice",
      "total_files": 3,
      "modules": {
        "agent": {
          "name": "agent",
          "file_path": "practice\\agent.py",
          "functions": [
            {
              "name": "chatbot",
              "file_path": "practice\\agent.py",
              "line_number": 38,
              "args": [
                "state"
              ],
              "return_type": null,
              "docstring": null,
              "is_async": false,
              "is_method": false,
              "class_name": null
            },
            {
              "name": "chat",
              "file_path": "practice\\agent.py",
              "line_number": 52,
              "args": [
                "user_input",
                "history"
              ],
              "return_type": null,
              "docstring": null,
              "is_async": false,
              "is_method": false,
              "class_name": null
            }
          ],
          "classes": [
            {
              "name": "State",
              "file_path": "practice\\agent.py",
              "line_number": 32,
              "methods": [],
              "docstring": null,
              "base_classes": [
                "BaseModel"
              ]
            }
          ],
          "imports": [
            "os",
            "dotenv.load_dotenv",
            "langchain_openai.AzureChatOpenAI",
            "typing.Annotated",
            "langgraph.graph.StateGraph",
            "langgraph.graph.START",
            "langgraph.graph.END",
            "langgraph.graph.message.add_messages",
            "langgraph.graph.StateGraph",
            "langchain.schema.HumanMessage",
            "langchain.schema.SystemMessage",
            "langgraph.checkpoint.memory.MemorySaver",
            "gradio",
            "pydantic.BaseModel"
          ],
          "constants": {}
        }
      },
      "entry_points": [],
      "dependencies": [
        "langgraph.checkpoint.memory.MemorySaver",
        "os",
        "langgraph.graph.END",
        "langgraph.graph.START",
        "typing.Annotated",
        "langchain.schema.SystemMessage",
        "langgraph.graph.message.add_messages",
        "pydantic.BaseModel",
        "gradio",
        "langgraph.graph.StateGraph",
        "langchain_openai.AzureChatOpenAI",
        "langchain.schema.HumanMessage",
        "dotenv.load_dotenv"
      ],
      "testable_functions": [
        {
          "name": "chatbot",
          "file_path": "practice\\agent.py",
          "line_number": 38,
          "args": [
            "state"
          ],
          "return_type": null,
          "docstring": null,
          "is_async": false,
          "is_method": false,
          "class_name": null
        },
        {
          "name": "chat",
          "file_path": "practice\\agent.py",
          "line_number": 52,
          "args": [
            "user_input",
            "history"
          ],
          "return_type": null,
          "docstring": null,
          "is_async": false,
          "is_method": false,
          "class_name": null
        }
      ],
      "testable_classes": [
        {
          "name": "State",
          "file_path": "practice\\agent.py",
          "line_number": 32,
          "methods": [],
          "docstring": null,
          "base_classes": [
            "BaseModel"
          ]
        }
      ]
    },
    "coverage_data": {
      "total_coverage": 80.0,
      "total_statements": 160,
      "covered_statements": 128,
      "missing_statements": 32,
      "files": {
        "practice\\agent.py": {
          "statements": 36,
          "missing": 0,
          "covered": 36,
          "coverage_percent": 100.0,
          "missing_lines": [],
          "excluded_lines": []
        },
        "practice\\output\\tests\\test_integration_agent.py": {
          "statements": 66,
          "missing": 10,
          "covered": 56,
          "coverage_percent": 84.84848484848484,
          "missing_lines": [
            53,
            65,
            68,
            69,
            96,
            99,
            100,
            101,
            102,
            104
          ],
          "excluded_lines": []
        },
        "practice\\output\\tests\\test_unit_agent.py": {
          "statements": 58,
          "missing": 22,
          "covered": 36,
          "coverage_percent": 62.06896551724138,
          "missing_lines": [
            35,
            47,
            48,
            49,
            50,
            56,
            57,
            58,
            65,
            66,
            67,
            76,
            77,
            78,
            84,
            85,
            86,
            87,
            88,
            99,
            100,
            101
          ],
          "excluded_lines": []
        }
      },
      "meta": {
        "format": 3,
        "version": "7.9.1",
        "timestamp": "2025-08-06T14:02:19.626972",
        "branch_coverage": false,
        "show_contexts": false
      },
      "totals": {
        "covered_lines": 128,
        "num_statements": 160,
        "percent_covered": 80.0,
        "percent_covered_display": "80",
        "missing_lines": 32,
        "excluded_lines": 0
      }
    }
  }
}